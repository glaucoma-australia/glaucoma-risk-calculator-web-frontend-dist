var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input } from '@angular/core';
import { JsonSchemaFormService } from '../library/json-schema-form.service';
var FieldsetComponent = (function () {
    function FieldsetComponent(jsf) {
        this.jsf = jsf;
        this.expanded = true;
    }
    FieldsetComponent.prototype.ngOnInit = function () {
        this.options = this.layoutNode.options;
        this.expanded = !this.options.expandable;
    };
    FieldsetComponent.prototype.expand = function () {
        if (this.options.expandable) {
            this.expanded = !this.expanded;
        }
    };
    return FieldsetComponent;
}());
__decorate([
    Input(),
    __metadata("design:type", Number)
], FieldsetComponent.prototype, "formID", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], FieldsetComponent.prototype, "layoutNode", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], FieldsetComponent.prototype, "layoutIndex", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], FieldsetComponent.prototype, "dataIndex", void 0);
FieldsetComponent = __decorate([
    Component({
        selector: 'fieldset-widget',
        template: "\n    <fieldset\n      [class]=\"options?.htmlClass\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\"\n      [disabled]=\"options?.readonly\">\n      <legend *ngIf=\"options?.title && layoutNode?.type !== 'tab'\"\n        [class]=\"options?.labelHtmlClass\"\n        [class.sr-only]=\"options?.notitle\"\n        [innerHTML]=\"options?.title\"\n        (click)=\"expand()\"></legend>\n\n        <root-widget *ngIf=\"expanded\"\n          [formID]=\"formID\"\n          [layout]=\"layoutNode.items\"\n          [dataIndex]=\"dataIndex\"\n          [layoutIndex]=\"layoutIndex\"\n          [isOrderable]=\"options?.orderable\"></root-widget>\n\n    </fieldset>",
        styles: ["\n    .expandable > legend:before { content: '\\25B8'; padding-right: .3em; }\n    .expanded > legend:before { content: '\\25BE'; padding-right: .2em; }\n  "],
    }),
    __metadata("design:paramtypes", [JsonSchemaFormService])
], FieldsetComponent);
export { FieldsetComponent };
//# sourceMappingURL=/home/samuel/repos/glaucoma_risk_calculator/glaucoma-risk-calc-web-frontend/src/node_modules/angular2-json-schema-form/src/widgets/fieldset.component.js.map