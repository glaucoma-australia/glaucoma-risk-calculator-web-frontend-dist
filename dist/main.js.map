{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/api/auth/auth.service.ts","webpack:///./src/api/config/config.service.ts","webpack:///./src/api/risk_res/risk_res.service.ts","webpack:///./src/api/risk_stats/risk-stats.service.ts","webpack:///./src/api/server-status/server-status.service.ts","webpack:///./src/api/template/template.service.ts","webpack:///./src/api/user/user.service.ts","webpack:///./src/app/alerts/alerts.component.css","webpack:///./src/app/alerts/alerts.component.html","webpack:///./src/app/alerts/alerts.component.ts","webpack:///./src/app/alerts/alerts.module.ts","webpack:///./src/app/alerts/alerts.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptors.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.routes.ts","webpack:///./src/app/auth/login/login.component.css","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/logout/logout.component.ts","webpack:///./src/app/colours.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/dashboard/dashboard.routes.ts","webpack:///./src/app/email/email.component.css","webpack:///./src/app/email/email.component.html","webpack:///./src/app/email/email.component.ts","webpack:///./src/app/email/email.module.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/footer/footer.module.ts","webpack:///./src/app/ms-auth/ms-auth.component.css","webpack:///./src/app/ms-auth/ms-auth.component.html","webpack:///./src/app/ms-auth/ms-auth.component.ts","webpack:///./src/app/ms-auth/ms-auth.module.ts","webpack:///./src/app/ms-auth/ms-auth.service.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/navbar/navbar.module.ts","webpack:///./src/app/richtext/richtext.component.css","webpack:///./src/app/richtext/richtext.component.html","webpack:///./src/app/richtext/richtext.component.ts","webpack:///./src/app/richtext/richtext.module.ts","webpack:///./src/app/risk-pointer/risk-pointer.component.css","webpack:///./src/app/risk-pointer/risk-pointer.component.html","webpack:///./src/app/risk-pointer/risk-pointer.component.ts","webpack:///./src/app/risk-quiz-form-submitted/risk-quiz-form-submitted.component.css","webpack:///./src/app/risk-quiz-form-submitted/risk-quiz-form-submitted.component.html","webpack:///./src/app/risk-quiz-form-submitted/risk-quiz-form-submitted.component.ts","webpack:///./src/app/risk-quiz-form-submitted/risk-quiz-form-submitted.routes.ts","webpack:///./src/app/risk-quiz-form/risk-quiz-form.component.css","webpack:///./src/app/risk-quiz-form/risk-quiz-form.component.html","webpack:///./src/app/risk-quiz-form/risk-quiz-form.component.ts","webpack:///./src/app/risk-quiz-form/risk-quiz-form.module.ts","webpack:///./src/app/risk-quiz-form/risk-quiz.model.ts","webpack:///./src/app/server-status/server-status.component.css","webpack:///./src/app/server-status/server-status.component.html","webpack:///./src/app/server-status/server-status.component.ts","webpack:///./src/app/server-status/server-status.module.ts","webpack:///./src/app/template/template.component.css","webpack:///./src/app/template/template.component.html","webpack:///./src/app/template/template.component.ts","webpack:///./src/app/template/template.module.ts","webpack:///./src/app/users/users.component.css","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.ts","webpack:///./src/app/users/users.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/utils.ts","webpack:///fs (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./auth/auth.module\": [\n\t\t\"./src/app/auth/auth.module.ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { AlertsService } from '../../app/alerts/alerts.service';\nimport { IAuthReq, ILoginResp } from './auth.interfaces';\n\n\n@Injectable()\nexport class AuthService {\n  public access_token: string;\n  public loggedIn = AuthService.loggedIn;\n\n  static loggedIn(): boolean {\n    return localStorage.getItem('access-token') !== null;\n  }\n\n  static getAccessToken(): string {\n    return localStorage.getItem('access-token');\n  }\n\n  constructor(private http: HttpClient,\n              private router: Router,\n              private alertsService: AlertsService) {\n    const at = localStorage.getItem('access-token');\n    if (at != null) this.access_token = at;\n  }\n\n  public logout() {\n    ['access-token', 'user'].forEach(k => localStorage.removeItem(k));\n\n    this.router\n      .navigate(['/'],\n        this.router.url === '/auth/logout' ? {} : { queryParams: { redirectUrl: this.router.url } });\n  }\n\n  public login(user: IAuthReq): Observable<ILoginResp> | /*ObservableInput<{}> |*/ void {\n    localStorage.setItem('user', user.email);\n    return this.http\n      .post<ILoginResp>('/api/auth', user);\n  }\n\n  public register(user: IAuthReq): Observable<HttpResponse<IAuthReq>> {\n    localStorage.setItem('user', user.email);\n    return this.http.post<IAuthReq>('/api/user', user, { observe: 'response' });\n  }\n\n  public signinup(user: IAuthReq): Observable<IAuthReq | ILoginResp> {\n    return (this.login(user) as Observable<ILoginResp>)\n      .pipe(catchError((err: HttpErrorResponse) =>\n        err && err.error && err.error.message && err.error.message === 'User not found' ?\n          this.register(user)\n            .pipe(map(o => Object.assign(o.body, { access_token: o.headers.get('X-Access-Token') })))\n          : this.alertsService.add(err.error.message) || throwError(err.error)\n      ));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\n\nimport { IConfig, IConfigBase } from './config.interfaces';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable()\nexport class ConfigService {\n  public config: IConfig;  // silly cache\n\n  constructor(private http: HttpClient) {\n  }\n\n  public get(): Observable<IConfig> {\n    return this.config ? of(this.config) :\n      this.http.get<IConfig>('/api/config')\n        .pipe(map(config => this.config = config));\n  }\n\n  public post(conf: IConfigBase): Observable<IConfig> {\n    return this.http.post<IConfig>('/api/config', conf)\n      .pipe(map(config => this.config = config));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { IRiskQuiz } from '../../app/risk-quiz-form/risk-quiz.model';\n\nimport { IRiskRes, IRiskResBase } from './risk_res';\n\n\n@Injectable()\nexport class RiskResService {\n  public risk;\n  public id;\n\n  constructor(private http: HttpClient) {\n  }\n\n  create(risk_res: IRiskQuiz): Observable<IRiskRes> {\n    return this.http.post<IRiskRes>('/api/risk_res', risk_res);\n  }\n\n  read(id: number | 'latest'): Observable<IRiskRes> {\n    return this.http.get<IRiskRes>(`/api/risk_res/${id}`);\n  }\n\n  update(id: number | 'latest', newRecord: IRiskResBase): Observable<IRiskRes> {\n    return this.http.put<IRiskRes>(`/api/risk_res/${id}`, newRecord);\n  }\n\n  destroy(id: number | 'latest'): Observable<{}> {\n    return this.http.delete<IRiskRes>(`/api/risk_res/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { IRiskJson } from 'glaucoma-risk-calculator-engine';\n\nimport { AuthService } from '../auth/auth.service';\nimport { IRiskStats, IRiskStatsBase } from './risk-stats';\n\n\n@Injectable()\nexport class RiskStatsService {\n  public risk_json: IRiskJson;\n  public risk;\n\n  constructor(private authService: AuthService,\n              private http: HttpClient) {}\n\n  create(risk_stats: IRiskStatsBase): Observable<IRiskStats> {\n    return this.http.post<IRiskStats>('/api/risk_stats', risk_stats);\n  }\n\n  read(createdAt: string | 'latest' | Date): Observable<IRiskStats> {\n    return this.http.get<IRiskStats>(`/api/risk_stats/${createdAt}`);\n  }\n\n  update(prevRecord: IRiskStats, newRecord: IRiskStatsBase): Observable<IRiskStats> {\n    return this.http.put<IRiskStats>(`/api/risk_stats/${prevRecord.createdAt}`, newRecord);\n  }\n\n  destroy(createdAt: string | Date): Observable<{}> {\n    return this.http.delete<{}>(`/api/risk_stats/${createdAt}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\n\nimport { IServerStatus } from './server-status.interfaces';\n\n@Injectable()\nexport class ServerStatusService {\n  last_resp: IServerStatus;\n\n  constructor(private http: HttpClient) { }\n\n  get(): Observable<IServerStatus> {\n    return this.last_resp ? of(this.last_resp)\n      : this.http.get<IServerStatus>('/api');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\n\nimport { AlertsService } from '../../app/alerts/alerts.service';\nimport { ITemplate, ITemplateBase, ITemplateBatch } from './template.d';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable()\nexport class TemplateService {\n  public templates: Map<string, ITemplateBase> = new Map();  // silly cache\n\n  constructor(private http: HttpClient,\n              private alertsService: AlertsService) {\n  }\n\n  public hasTpl(kind: string = 'email'): boolean {\n    return this.templates.has(kind) && this.templates.get(kind).contents\n      && this.templates.get(kind).contents.length > 0;\n  }\n\n  public setTpl(contents: string, kind: string = 'email') {\n    this.hasTpl(kind) ?\n      this.templates.get(kind).contents = contents\n      : this.templates.set(kind, { contents: contents, createdAt: new Date().toISOString() });\n  }\n\n  public getTpl(kind: string = 'email'): string {\n    return this.templates.has(kind) ? this.templates.get(kind).contents : void 0;\n  }\n\n  create(template: ITemplateBase): Observable<ITemplate> {\n    return this.http.post<ITemplate>('/api/template', template);\n  }\n\n  createBatch(new_templates: ITemplateBase[]): Observable<ITemplateBatch> {\n    return this.http.post<ITemplateBatch>('/api/templates', { templates: new_templates });\n  }\n\n  read(createdAt: string | 'latest' | Date, kind: string = 'email'): Observable<ITemplate> {\n    return this.http.get<ITemplate>(`/api/template/${createdAt}_${kind}`);\n  }\n\n  readBatch(): Observable<{templates: ITemplate[]}> {\n    return this.http.get<{templates: ITemplate[]}>('/api/templates/latest')\n      .pipe(map(templates => {\n          templates.templates.forEach(template =>\n            this.templates.set(template.kind, template)\n          );\n          return templates;\n        }),\n        catchError(error =>\n          this.alertsService.add(error) || throwError(error)\n        ));\n  }\n\n  update(prevRecord: ITemplate, newRecord: ITemplateBase): Observable<ITemplate> {\n    return this.http.put<ITemplate>(`/api/template/${prevRecord.createdAt}`, newRecord);\n  }\n\n  destroy(createdAt: string | Date, kind: string = 'email'): Observable<{}> {\n    return this.http.delete<ITemplate>(`/api/template/${createdAt}_${kind}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { IAuthReq } from '../auth/auth.interfaces';\n\n@Injectable()\nexport class UserService {\n  constructor(private http: HttpClient) {\n  }\n\n  post(user: IAuthReq): Observable<IAuthReq> {\n    return this.http.post<IAuthReq>('/api/user', user);\n  }\n\n  getAll(): Observable<{users: IAuthReq[]}> {\n    return this.http.get<{users: IAuthReq[]}>('/api/users');\n  }\n}\n","module.exports = \"body {\\n  padding-top: 150px;\\n}\\n\"","module.exports = \"<ngb-alert *ngFor=\\\"let alert of alertsService.alerts;let i = index\\\" [type]=\\\"alert.type\\\" dismissible=\\\"true\\\"\\n           (close)=\\\"closeAlert(i)\\\"\\n           style=\\\"color: #ffcc9a\\\">\\n  <h3>{{ alert?.msg }}</h3>\\n</ngb-alert>\\n\"","import { Component, Input, OnInit } from '@angular/core';\n\nimport { IAlert, TAlert } from './alert';\nimport { AlertsService } from './alerts.service';\n\n@Component({\n  selector: 'app-alerts',\n  templateUrl: './alerts.component.html',\n  styleUrls: ['./alerts.component.css']\n})\nexport class AlertsComponent implements OnInit {\n  @Input() public type = 'warning';\n  @Input() public dismissible: boolean;\n  @Input() public dismissOnTimeout: number;\n\n  public alerts: Array<TAlert>;\n\n  constructor(public readonly alertsService: AlertsService) {\n  }\n\n  ngOnInit() {\n  }\n\n  addAlert(alert: IAlert) {\n    this.alertsService.add(alert);\n  }\n\n  closeAlert(i: number) {\n    this.alertsService.close(i);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AlertsComponent } from './alerts.component';\nimport { AlertsService } from './alerts.service';\n\n@NgModule({\n  imports: [\n    CommonModule, NgbAlertModule.forRoot()\n  ],\n  declarations: [AlertsComponent],\n  exports: [AlertsComponent]\n})\nexport class AlertsModule {\n  public static forRoot(): ModuleWithProviders {\n    return { ngModule: AlertsModule, providers: [AlertsService] };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\n\nimport { AppService } from '../app.service';\nimport { IAlert, TAlert } from './alert';\n\n@Injectable()\nexport class AlertsService {\n  public alerts: TAlert[] = [];\n  private readonly _padding = 4.5;\n\n  constructor(public appService: AppService) {\n  }\n\n  public add(alert: TAlert | string): void {\n    if (alert == null) return;\n    else if ((alert as IAlert).type && (alert as IAlert).msg)\n      this.alerts.push({\n        type: (alert as IAlert).type,\n        msg: (\n          s => typeof s === 'string' ? s\n            : `${(s as Response).status}: ${(s as Response).statusText} on ${(s as Response).url}`\n        )(\n          (alert as IAlert).msg as any as string | object\n        )\n      });\n    else this.alerts.push({\n        type: 'warning',\n        msg: typeof alert === 'string' ? alert : (alert.hasOwnProperty('error') && alert.hasOwnProperty('error_message') ?\n          Object.values(alert).join(': ') : Object\n            .keys(alert)\n            .map(k => alert[k])\n            .join('\\t'))\n      });\n    this.appService.navbarPadding += this._padding;\n  }\n\n  public close(i: number): void {\n    this.alerts.splice(i, 1);\n    this.appService.navbarPadding -= this._padding;\n  }\n}\n","module.exports = \"a {\\n  text-decoration: none;\\n}\\n\\na.active {\\n  font-weight: bold;\\n}\\n\\nhtml {\\n  position: relative;\\n  min-height: 100%;\\n}\\n\"","module.exports = \"<header [ngStyle]=\\\"getBottom()\\\">\\n  <app-navbar></app-navbar>\\n</header>\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n<!--\\n<hr>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row offset-sm-9\\\">\\n    <button class=\\\"btn btn-lg btn-danger\\\"\\n            (click)=\\\"addAlert()\\\">Add alert</button>\\n  </div>\\n</div>\\n-->\\n<hr>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Params } from '@angular/router/src/shared';\n\nimport { AuthService } from '../api/auth/auth.service';\nimport { ConfigService } from '../api/config/config.service';\nimport { MsAuthService, parseQueryString } from './ms-auth/ms-auth.service';\nimport { AlertsService } from './alerts/alerts.service';\nimport { AppService } from './app.service';\n\n\n@Component({\n  /* tslint:disable:component-selector */\n  selector: 'glaucoma-risk-calculator',\n  styleUrls: ['app.component.css'],\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent implements OnInit {\n  constructor(private router: Router,\n              private route: ActivatedRoute,\n              public authService: AuthService,\n              public appService: AppService,\n              private confService: ConfigService,\n              private msAuthService: MsAuthService,\n              private alertsService: AlertsService) {\n  }\n\n  ngOnInit() {\n    /* tslint:disable:no-console */\n    console.info('AppComponent::route.fragment =', this.route.fragment, ';');\n    console.info('AppComponent::route.queryParams =', this.route.queryParams, ';');\n\n    /*\n    Observable.merge(this.route.fragment, this.route.queryParams)\n      .subscribe((allParams) => {\n        console.info('typeof allParams =', typeof allParams, 'isobject',\n         Object.keys(allParams).length === 0 && allParams.constructor === Object, ';');\n        if (typeof allParams === 'string')\n          allParams = parseQueryString(allParams);\n        console.info('NOW typeof allParams =', typeof allParams, 'isobject',\n        Object.keys(allParams).length === 0 && allParams.constructor === Object, ';');\n        this.handleParams(allParams);\n      });\n      */\n    this.route.fragment.subscribe((fragment: string) => {\n      const qs = parseQueryString(fragment);\n      /* tslint:disable:no-console */\n      console.log('AppComponent::ngOnInit::ngOnInit::hash_fragment', qs, ';');\n      this.handleParams(qs);\n    });\n\n    this.route.queryParams.subscribe(\n      (params: Params & {id_token: string, state: string, access_token: string}) => {\n        // tslint:disable:no-console\n        console.info('AppComponent::ngOnInit::queryParams::params', params, ';');\n        this.handleParams(params);\n      });\n  }\n\n  private handleParams(params: Params) {\n    if (!params || Object.keys(params).length === 0 && params.constructor === Object)\n      return;\n\n    console.info('AppComponent::handleParams::params:', params, ';');\n\n    this.confService\n      .get()\n      .subscribe(conf => {\n          /* tslint:disable:no-console */\n          console.info('AppComponent::conf', conf, ';');\n\n          this.msAuthService.init();\n\n          const fin = () => this.router.navigateByUrl(params.hasOwnProperty('state') ? decodeURIComponent(params.state) : '/');\n\n          if (params.hasOwnProperty('code'))\n            this.msAuthService.login('code', params.code, params.state);\n          else if (params.hasOwnProperty('refresh_token'))\n            this.msAuthService.login( 'refresh_token', params.refresh_token, params.state);\n          else if (params.hasOwnProperty('access_token')) {\n            this.confService.config.access_token = params.access_token;\n            localStorage.setItem('ms::access_token', params.access_token);\n            this.confService.post(this.confService.config).subscribe(() => fin());\n          } else if (params.hasOwnProperty('error')) {\n            this.alertsService.add([params.error, params.error_description].join(': '));\n            console.error(params);\n          } else fin();\n        },\n        console.error\n      );\n  }\n\n  getBottom() {\n    return { 'margin-bottom': `${this.alertsService.alerts.length ? this.alertsService.alerts.length * 6 : 6}em` };\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { AlertsModule } from './alerts/alerts.module';\nimport { NavbarModule } from './navbar/navbar.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { UsersModule } from './users/users.module';\nimport { EmailModule } from './email/email.module';\nimport { FooterModule } from './footer/footer.module';\nimport { RiskQuizFormModule } from './risk-quiz-form/risk-quiz-form.module';\n\nimport { TemplateService } from '../api/template/template.service';\nimport { AuthService } from '../api/auth/auth.service';\n\nimport { AuthGuard } from './auth/auth.guard';\nimport { AuthInterceptor } from './auth/auth.interceptors';\nimport { AuthModule } from './auth/auth.module';\n\nimport { rootRoutes } from './app.routes';\nimport { AppComponent } from './app.component';\nimport { AppService } from './app.service';\n\n\n@NgModule({\n  imports: [\n    RouterModule, RouterModule.forRoot(rootRoutes),\n    BrowserModule, HttpClientModule, FormsModule,\n    NavbarModule, FooterModule, UsersModule,\n    AlertsModule.forRoot(),\n    RiskQuizFormModule, AuthModule, DashboardModule\n  ],\n  declarations: [AppComponent],\n  providers: [\n    AppService, AuthService, AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n    TemplateService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Routes } from '@angular/router';\n\nimport { RiskQuizFormComponent } from './risk-quiz-form/risk-quiz-form.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n// import { AuthGuard } from './api/auth/auth-guard.service';\n// NOTE: `canActivate` can only be done manually on all the child routes [true for ng @ 2.4.0]\n\n\n// 'app/login-signup/login-signup.module#LoginSignupModule'\n\nexport const rootRoutes: Routes = [\n  { path: '', component: RiskQuizFormComponent },\n  { path: 'auth', loadChildren: './auth/auth.module#AuthModule' },\n  { path: 'admin', component: DashboardComponent }\n];\n\n// { path: 'admin', loadChildren: 'app/dashboard/dashboard.module#DashboardModule' }\n// { path: 'admin/email', loadChildren: 'app/email/email.module#EmailModule' }\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n\n@Injectable()\nexport class AppService {\n  navbarPaddingChange: Subject<number> = new Subject();\n\n  constructor() {\n    // this.navbarPadding = this._navbarPadding;\n  }\n\n  private _navbarPadding = 16;\n\n  navbarPadding$: BehaviorSubject<number> = new BehaviorSubject(this._navbarPadding);\n\n  get navbarPadding(): number {\n    return this._navbarPadding;\n  }\n\n  set navbarPadding(val: number) {\n    this._navbarPadding = val;\n    this.navbarPadding$.next(this._navbarPadding);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../../api/auth/auth.service';\nimport { AlertsService } from '../alerts/alerts.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router,\n              private alertsService: AlertsService) {}\n\n  canActivate(route: ActivatedRouteSnapshot,\n              state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (AuthService.loggedIn()) return true;\n\n    const url: string = state.url;\n\n    this.alertsService.add(`Auth required to view ${url}`);\n    this.router\n      .navigate(['/auth'], { queryParams: { redirectUrl: url } })\n      .then(() => {});\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthService } from '../../api/auth/auth.service';\nimport { AlertsService } from '../alerts/alerts.service';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private router: Router,\n              private alertsService: AlertsService) {}\n\n  intercept(req: HttpRequest<any>,\n            next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(AuthService.loggedIn() && !req.url.startsWith('https://graph.microsoft.com') ?\n      req.clone({ headers: req.headers.set('X-Access-Token', AuthService.getAccessToken()) })\n      : req)\n      .pipe(catchError((err: any/*, caught*/) => {\n          if (err instanceof HttpErrorResponse)\n            switch (err.status) {\n              case 403:\n                if (!this.router.isActive('auth', false) && !this.router.isActive('/', true)\n                /*err.error.message === 'NotFound: X-Access-Token header must be included'*/) {\n                  this.alertsService.add('Authentication required');\n\n\n                  this.router\n                    .navigate(['auth'], { queryParams: { redirectUrl: this.router.url } })\n                    .then(success =>\n                      success || this.alertsService.add('Unable to route to /auth'))\n                    .catch(console.error);\n                } else\n                  console.warn({\n                    code: err.status,\n                    message: err.error.message\n                  });\n                break;\n              default:\n                /*this.alertsService.add({\n                  code: err.status,\n                  message: err.error.message\n                });*/\n                return throwError(err);\n            }\n          //  if (err.status === 403)\n          return throwError(err);\n        })\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthService } from '../../api/auth/auth.service';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { authRoutes } from './auth.routes';\n\n\n@NgModule({\n  imports: [\n    CommonModule, RouterModule, RouterModule.forChild(authRoutes),\n    FormsModule, ReactiveFormsModule\n  ],\n  providers: [AuthService],\n  declarations: [\n    LoginComponent, LogoutComponent\n  ]\n})\nexport class AuthModule {}\n","import { Routes } from '@angular/router';\n\nimport { LogoutComponent } from './logout/logout.component';\nimport { LoginComponent } from './login/login.component';\n\nexport const authRoutes: Routes = [\n  { path: 'auth', component: LoginComponent },\n  { path: 'auth/login', component: LoginComponent },\n  { path: 'auth/logout', component: LogoutComponent }\n];\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"mat-h1\\\">Login</h1>\\n\\n<form class=\\\"form-signin-up\\\" #formRef=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\"\\n      *ngIf=\\\"!authService.loggedIn()\\\" [formGroup]=\\\"form\\\" novalidate>\\n  <label for=\\\"email\\\" class=\\\"sr-only\\\">Email address</label>\\n  <input class=\\\"form-control\\\" formControlName=\\\"email\\\" type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Email\\\">\\n\\n  <label for=\\\"password\\\" class=\\\"sr-only\\\">Password</label>\\n  <input class=\\\"form-control\\\" formControlName=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\"\\n         placeholder=\\\"Password\\\">\\n\\n\\n  <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Sign in</button>\\n</form>\\n\\n<p *ngIf=\\\"authService.loggedIn()\\\">You are logged in.</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../../../api/auth/auth.service';\nimport { IAuthReq, ILoginResp } from '../../../api/auth/auth.interfaces';\nimport { AlertsService } from '../../alerts/alerts.service';\nimport { redirUrlOr } from '../../../utils';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  auth = new FormControl();\n  form: FormGroup;\n\n  constructor(private router: Router,\n              private fb: FormBuilder,\n              public authService: AuthService,\n              private alertsService: AlertsService) { }\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  login() {\n    (this.authService\n      .login(this.form.value as IAuthReq) as Observable<ILoginResp>)\n      .subscribe((user: ILoginResp) => {\n          if (user.access_token == null) {\n            this.alertsService.add('No access token; try logging in again');\n            return;\n          }\n\n          this.authService.access_token = user.access_token;\n          localStorage.setItem('access-token', this.authService.access_token);\n\n          this.router\n            .navigate([redirUrlOr('/admin')])\n            .then(() => {});\n        }\n      );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '../../../api/auth/auth.service';\n\n@Component({\n  selector: 'app-logout',\n  template: '<ng-content></ng-content>'\n})\nexport class LogoutComponent implements OnInit {\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authService.logout();\n  }\n}\n","import * as math from 'mathjs';\n\nexport interface IString2String {\n  [str: string]: string\n}\n\nexport const colours: IString2String = Object.freeze({\n  indigo: '#14143e',\n  pink: '#fd1c49',\n  orange: '#ff6e00',\n  yellow: '#f0c800',\n  mint: '#00efab',\n  cyan: '#05d1ff',\n  purple: '#841386',\n  white: '#fff',\n  darkgrey: 'darkgrey',\n  teal: '#5AA454',\n  darkred: '#A10A28',\n  gold: '#C7B42C',\n  grey: '#AAAAAA'\n});\n\nexport const numToColour = (num: number): string => {\n  if (math.compare(num, 5) < 1)\n    return colours.darkgrey;\n  else if (math.compare(num, 25) < 1)\n    return colours.cyan;\n  else if (math.compare(num, 50) < 1)\n    return colours.mint;\n  else if (math.compare(num, 75) < 1)\n    return colours.orange;\n  return colours.pink;\n};\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <div class=\\\"container\\\">\\n    <h1 class=\\\"display-4\\\">Administrator interface</h1>\\n    <p>Herein you can edit email templates, and modify email API details.</p>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <a class=\\\"btn btn-block btn-outline-primary\\\" routerLink=\\\"/admin/email\\\" routerLinkActive=\\\"active\\\">\\n        <i class=\\\"icon-mail\\\"></i> Manage email and social\\n      </a>\\n      <p>Edit email and social templates, modify authentication details</p>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <button class=\\\"btn btn-block btn-outline-danger\\\" routerLink=\\\"/admin/users\\\" routerLinkActive=\\\"active\\\">\\n        <i class=\\\"icon-users\\\"></i>Users\\n      </button>\\n      <p>View/search users</p>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  constructor(protected router: Router) {\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { UsersModule } from '../users/users.module';\nimport { EmailModule } from '../email/email.module';\nimport { DashboardComponent } from './dashboard.component';\nimport { dashboardRoutes } from './dashboard.routes';\n\n@NgModule({\n  imports: [\n    CommonModule, UsersModule, EmailModule,\n    RouterModule, RouterModule.forChild(dashboardRoutes)\n  ],\n  declarations: [DashboardComponent]\n})\nexport class DashboardModule {\n}\n","import { Routes } from '@angular/router';\n\nimport { EmailComponent } from '../email/email.component';\nimport { UsersComponent } from '../users/users.component';\nimport { AuthGuard } from '../auth/auth.guard';\n\nimport { DashboardComponent } from './dashboard.component';\n\n\nexport const dashboardRoutes: Routes = [\n  { path: 'admin/dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'admin/users', component: UsersComponent, canActivate: [AuthGuard] },\n  { path: 'admin/email', component: EmailComponent, canActivate: [AuthGuard] }\n];\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\" *ngIf=\\\"error\\\">\\n    <h3>Trace</h3>\\n    <pre>{{error}}</pre>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-9\\\">\\n      <app-template></app-template>\\n    </div>\\n    <div class=\\\"col\\\">\\n      <app-ms-auth></app-ms-auth>\\n    </div>\\n  </div>\\n</div>\\n\"","import { AfterViewInit, Component } from '@angular/core';\n\nimport { AlertsService } from '../alerts/alerts.service';\n\n\n@Component({\n  selector: 'app-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.css']\n})\nexport class EmailComponent implements AfterViewInit {\n  error: string;\n\n  constructor(private alertsService: AlertsService) {}\n\n  ngAfterViewInit() {\n    if (!this.alertsService.alerts || !this.alertsService.alerts.length)\n      return;\n    const alert: {msg: string} = this.alertsService.alerts[this.alertsService.alerts.length - 1] as any;\n    if (alert.msg && alert.msg.length && alert.msg.indexOf('interaction_required') > -1)\n      this.error = alert.msg;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { ConfigService } from '../../api/config/config.service';\nimport { TemplateModule } from '../template/template.module';\nimport { MsAuthModule } from '../ms-auth/ms-auth.module';\nimport { EmailComponent } from './email.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, TemplateModule, MsAuthModule\n  ],\n  declarations: [EmailComponent],\n  providers: [ConfigService]\n})\nexport class EmailModule {\n}\n","module.exports = \".grey {\\n  color: gainsboro;\\n}\\n\"","module.exports = \"<footer class=\\\"footer container\\\">\\n  <div class=\\\"row align-items-start\\\">\\n    <app-api-version class=\\\"col grey\\\"></app-api-version>\\n    <a routerLink=\\\"/auth\\\" class=\\\"col grey text-center\\\">auth</a>\\n    <span class=\\\"col text-right\\\">&copy; Glaucoma Australia, 2018.</span>\\n  </div>\\n</footer>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {\n  constructor() {\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { ServerStatusService } from '../../api/server-status/server-status.service';\nimport { ServerStatusModule } from '../server-status/server-status.module';\nimport { FooterComponent } from './footer.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule, RouterModule, ServerStatusModule\n  ],\n  providers: [ServerStatusService],\n  declarations: [FooterComponent],\n  exports: [FooterComponent]\n})\nexport class FooterModule {\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <a type=\\\"button\\\" class=\\\"col btn btn-lg btn-warning\\\" (click)=\\\"login()\\\" *ngIf=\\\"!loggedIn()\\\">\\n      Authenticate with Office 365\\n    </a>\\n\\n    <button class=\\\"col btn btn-sm btn-outline-danger\\\"\\n            (click)=\\\"logout()\\\" *ngIf=\\\"loggedIn()\\\">\\n      Office 365 logout\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"col-sm-2 btn btn-sm\\\" (click)=\\\"toggleCollapse()\\\">Advanced</button>\\n  </div>\\n</div>\\n\\n<form *ngIf=\\\"loggedIn() && email_form\\\" (ngSubmit)=\\\"sendTestEmail()\\\" [formGroup]=\\\"email_form\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"test_recipient\\\">Recipient</label>\\n    <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"test_recipient\\\" name=\\\"test_recipient\\\" formControlName=\\\"test_recipient\\\"\\n           aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email address\\\">\\n    <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">Address to send email</small>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"test_subject\\\">Subject</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"test_subject\\\" name=\\\"test_subject\\\" formControlName=\\\"test_subject\\\"\\n           aria-describedby=\\\"subjectHelp\\\" placeholder=\\\"Enter subject\\\">\\n    <small id=\\\"subjectHelp\\\" class=\\\"form-text text-muted\\\">Subject of email</small>\\n  </div>\\n\\n  <button class=\\\"btn btn-lg btn-primary\\\" type=\\\"submit\\\">Send test email</button>\\n</form>\\n\\n<hr *ngIf=\\\"!isCollapsed\\\">\\n\\n<div [ngbCollapse]=\\\"isCollapsed\\\" class=\\\"card card-block card-header\\\">\\n  <div class=\\\"well well-lg\\\">\\n    More info:\\n    <a href=\\\"https://graph.microsoft.io/en-us/docs/authorization/app_authorization\\\" target=\\\"_blank\\\">\\n      Microsoft Graph app authorisation\\n    </a>\\n    <form (ngSubmit)=\\\"updateAuth()\\\" [formGroup]=\\\"advanced_form\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"client_id\\\">Client ID</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"client_id\\\" name=\\\"client_id\\\" formControlName=\\\"client_id\\\"\\n               placeholder=\\\"Enter client_id\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"client_secret\\\">Client Secret</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"client_secret\\\" name=\\\"client_secret\\\" formControlName=\\\"client_secret\\\"\\n               placeholder=\\\"Enter client_secret\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"tenant_id\\\">Tenant ID</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"tenant_id\\\" name=\\\"tenant_id\\\" formControlName=\\\"tenant_id\\\"\\n               placeholder=\\\"Enter tenant_id\\\">\\n      </div>\\n\\n      <button class=\\\"btn btn-outline-warning\\\" type=\\\"submit\\\">Update auth</button>\\n    </form>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { ConfigService } from '../../api/config/config.service';\nimport { TemplateService } from '../../api/template/template.service';\nimport { AlertsService } from '../alerts/alerts.service';\nimport { IMail, MsAuthService } from './ms-auth.service';\n\n\n@Component({\n  selector: 'app-ms-auth',\n  templateUrl: './ms-auth.component.html',\n  styleUrls: ['./ms-auth.component.css']\n})\nexport class MsAuthComponent implements OnInit {\n  email_form: FormGroup;\n  advanced_form: FormGroup;\n\n  public isCollapsed = true;\n\n  constructor(private fb: FormBuilder,\n              private alertsService: AlertsService,\n              private msAuthService: MsAuthService,\n              private confService: ConfigService,\n              private templateService: TemplateService) {\n    this.email_form = this.fb.group({\n      test_recipient: ['', Validators.required],\n      test_subject: ['', Validators.required]\n    });\n\n    this.advanced_form = this.fb.group({\n      client_id: ['', Validators.required],\n      client_secret: '',\n      tenant_id: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    this.confService\n      .get()\n      .subscribe(conf =>\n        conf && Object.keys(conf).length &&\n        this.advanced_form.setValue(\n          Object\n            .keys(conf)\n            .reduce((obj: {}, key: string) =>\n              ['client_id', 'client_secret', 'tenant_id'].indexOf(key) > -1 ?\n                Object.assign({ [key]: conf[key] }, obj) : obj, {}\n            )\n        )\n      );\n  }\n\n  login() {\n    this.msAuthService.login('code');\n  }\n\n  loggedIn(): boolean {\n    return localStorage.getItem('ms::access_token') != null;\n  }\n\n  logout() {\n    this.msAuthService.logout();\n  }\n\n  sendTestEmail() {\n    /* tslint:disable:no-console */\n    console.info('MsAuthComponent::sendTestEmail');\n    this.msAuthService\n      .localSendEmail(Object.assign(\n        { content: this.templateService.getTpl('email') },\n        Object\n          .keys(this.email_form.value)\n          .map(k => {\n            const sw = 'test_';\n            return { [k.startsWith(sw) ? k.slice('sw'.length) : k]: this.email_form.value[k] }\n          })\n          .reduce((a, b) => Object.assign(a, b), {}) as IMail\n      ))\n      .subscribe(email => console.info(email) || this.alertsService.add({\n          type: 'info', msg: 'Sent email'\n        }), console.error\n      );\n  }\n\n  public toggleCollapse() {\n    this.isCollapsed = !this.isCollapsed;\n  }\n\n  public updateAuth() {\n    const access_token = localStorage.getItem('ms::access_token');\n    this.confService\n      .post(Object.assign(\n        access_token == null ? {} : { access_token },\n        this.advanced_form.value\n      ))\n      .subscribe(\n        auth => console.info(auth) || this.alertsService.add({ type: 'info', msg: 'Updated auth' }),\n        console.error.bind(console) // error => this.authService.redirOnResIfUnauth(error)\n      )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { NgbCollapseModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { MsAuthComponent } from './ms-auth.component';\nimport { MsAuthService } from './ms-auth.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, ReactiveFormsModule, RouterModule,\n    NgbCollapseModule.forRoot()\n  ],\n  providers: [MsAuthService],\n  declarations: [MsAuthComponent],\n  exports: [MsAuthComponent]\n})\nexport class MsAuthModule {\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams, HttpResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Observable, throwError } from 'rxjs';\n\nimport { ConfigService } from '../../api/config/config.service';\nimport { AlertsService } from '../alerts/alerts.service';\nimport { catchError, map } from 'rxjs/operators';\n\n\ninterface ArrayBufferViewForEach extends ArrayBufferView {\n  forEach(callbackfn: (value: number, index: number, array: Int8Array) => void, thisArg?: any): void;\n}\n\n// old endpoint\ninterface ResHash {\n  id_token?: string;\n  access_token?: string;\n  state: string;\n  session_state: string;\n}\n\ninterface IUrlParams {\n  url: string;\n  params: HttpParams;\n}\n\n// new endpoint: https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/concepts/auth_v2_user.md#token-response\ninterface ITokenResponse {\n  token_type: 'Bearer';\n  scope: string;\n  expires_in: number;\n  access_token: string;\n  refresh_token: string;\n}\n\nexport interface IMail {\n  recipient: string;\n  subject: string;\n  content: string;\n}\n\n// https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-v2-protocols-oauth-code#successful-response-1\nexport interface IMSRefreshResponse {\n  access_token: string;\n  token_type: 'Bearer' | string;\n  expires_in: number;\n  scope: string;\n  refresh_token: string;\n  id_token: string;\n}\n\nexport const parseQueryString = (url: string): ResHash => {\n  const params: ResHash = {} as ResHash;\n  const regex = /([^&=]+)=([^&]*)/g;\n  let m: RegExpExecArray;\n  while (m = regex.exec(url)) {\n    params[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);\n  }\n  return params;\n};\n\n@Injectable()\nexport class MsAuthService {\n  private readonly params: ResHash;\n\n  static genNonce() {\n    const charset = '0123456789ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvwxyz'; // '-._~';\n    const rands = new Uint8Array(32);\n    const results = [];\n    window.crypto.getRandomValues(rands);\n    rands.forEach(c => results.push(charset[c % charset.length]));\n    return results.join('');\n  }\n\n  static getHostOrigin(): string {\n    return `${window.location.protocol}//${window.location.hostname}${window.location.port ?\n      ':' + window.location.port : ''}`;\n  }\n\n  static paramsToObject(params: HttpParams): {} {\n    const o = {};\n    for (const key of params.keys())\n      o[key] = params.get(key);\n    /* tslint:disable:no-console */\n    console.info('paramsToObject::params:', params, ';\\ntoObject:', o, ';');\n    return o;\n  }\n\n  private msAuthRedir(url_params: IUrlParams) {\n    console.info('MsAuthService::getTokenParams() =', this.getTokenParams(), ';');\n    console.info('MsAuthService::msAuthRedir::params', url_params.params, ';');\n    window.location.href = `${url_params.url}${url_params.params}`;\n  }\n\n  private getTokenParams(state?: string): HttpParams {\n    /* tslint:disable:no-console */\n    console.info('MsAuthService::getTokenParams::client_id =', this.configService.config.client_id, ';');\n\n    return new HttpParams()\n      .set('client_id', this.configService.config.client_id)\n      .set('redirect_uri', MsAuthService.getHostOrigin())\n      .set('state', state || window.location.pathname) // redirect_uri doesn't work with angular for some reason?\n      .set('nonce', MsAuthService.genNonce());\n  }\n\n  constructor(private http: HttpClient,\n              private router: Router,\n              private configService: ConfigService,\n              private alertsService: AlertsService) {\n    this.params = parseQueryString(location.hash);\n    this.init();\n  }\n\n  public login(token_type: 'refresh_token' | 'code' | 'access_token',\n               token?: string, state?: string) {\n    if (token_type == null) return;\n\n    this.params[token_type] = token;\n\n    /* tslint:disable:no-console */\n    console.info('MsAuthService::login::params =', this.params, ';');\n    console.info('MsAuthService::login::token_type', token_type, ';');\n    console.info('MsAuthService::login::token:', token, 'of type', typeof token, ';');\n\n    switch (token_type) {\n      case 'code':\n        if (token == null || token === 'undefined') this.msAuthRedir(this.getCode(state));\n        localStorage.setItem(`ms::${token_type}`, token);\n        this.login('refresh_token', void 0, state);\n        break;\n      case 'access_token':\n      case 'refresh_token':\n        if (token == null || token === 'undefined')\n          this.getTokens().subscribe(\n            tokens =>\n              Object.keys(tokens).forEach(key =>\n                localStorage.setItem(`ms::#${key}`, tokens[key])\n              ),\n            (error: {\n              statusCode: number,\n              method: string,\n              headers: {}\n            }) => {\n              const msg = JSON.parse(error.method);\n              console.error(msg.headers);\n              const method: {error: string, error_description: string} = JSON.parse(msg.method);\n              this.alertsService.add(`${method.error}: ${method.error_description}`);\n            });\n    }\n\n    this.router.navigateByUrl(state == null ? '/' : decodeURIComponent(state));\n  }\n\n  public logout() {\n    Object\n      .keys(localStorage)\n      .forEach(key => key.startsWith('ms::') && localStorage.removeItem(key));\n  }\n\n  public init() {\n    this.configService.get().subscribe(() => {});\n  }\n\n  public localSendEmail(mail: IMail): Observable<IMSRefreshResponse> | any {\n    const httpOptions: {\n      headers?: HttpHeaders | {\n        [header: string]: string | string[];\n      };\n      observe: 'response';\n      params?: HttpParams | {\n        [param: string]: string | string[];\n      };\n      reportProgress?: boolean;\n      responseType?: 'json';\n      withCredentials?: boolean;\n    } = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.configService.config.access_token}`\n      }),\n      observe: 'response'\n    };\n\n    const body = {\n      message: {\n        subject: mail.subject,\n        toRecipients: [{\n          emailAddress: {\n            address: mail.recipient\n          }\n        }],\n        body: {\n          content: mail.content,\n          contentType: 'html'\n        }\n      }\n    };\n    return this.http\n      .post<IMSRefreshResponse>('https://graph.microsoft.com/v1.0/users/me/sendMail', body, httpOptions)\n      .pipe(\n        map((response: HttpResponse<IMSRefreshResponse>) => {\n          if (response.status !== 202)\n            return throwError(new Error(`Expected response.status of 202 got ${response.status}.\n           Body: ${response.body}`));\n          return response.body;\n        }),\n        catchError(error => {\n          const err = JSON.parse(error._body).error;\n          if (err.message === 'Access token has expired.')\n            this.login('code');\n          return throwError(err);\n        })\n      );\n  }\n\n  public getCode(state?: string): IUrlParams {\n    // https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/concepts/auth_v2_user.md#authorization-request\n\n    /*\n    // After redirect, successful response is:\n    interface ICodeResponse {\n      code: string;\n      state: string;\n    }\n    */\n\n    const default_params = MsAuthService.paramsToObject(this.getTokenParams(state));\n    const params = new HttpParams({\n      fromObject:\n        Object\n          .keys(default_params)\n          .filter(k => [\n            'client_id', 'response_type', 'redirect_uri', 'response_mode', 'scope', 'state'\n          ].indexOf(k) > -1)\n          .reduce((a, b) => Object.assign(a, { [b]: default_params[b] }), {})\n    })\n      .set('response_type', 'code')\n      .set('response_mode', 'query')\n      .set('scope', 'mail.send offline_access');\n    console.info('MsAuthService::getCode::params', params, ';');\n    return { params, url: `https://login.microsoftonline.com/${this.configService.config.tenant_id}/oauth2/v2.0/authorize?` };\n  }\n\n  public getTokens(state?: string): Observable<ITokenResponse> {\n    // https://docs.microsoft.com/en-us/onedrive/developer/rest-api/getting-started/graph-oauth#step-2-redeem-the-code-for-access-tokens\n\n    const default_params = MsAuthService.paramsToObject(this.getTokenParams(state));\n    const params = new HttpParams({\n      fromObject:\n        Object\n          .keys(default_params)\n          .filter(k => ['client_id', 'grant_type', 'scope', 'code', 'redirect_uri', 'client_secret'].indexOf(k) > -1)\n          .reduce((a, b) => Object.assign(a, { [b]: default_params[b] }), {})\n    })\n      .set('grant_type', 'authorization_code')\n      .set('scope', 'mail.send offline_access')\n      .set('code', localStorage.getItem('ms::code'))\n      .set('client_secret', this.configService.config.client_secret);\n    console.info('MsAuthService::getTokens::params', params, ';');\n\n    return this.http\n      .post<ITokenResponse>('/api/email/ms-auth', MsAuthService.paramsToObject(params));\n  }\n\n  /*\n  public getAccessToken(state?: string): HttpParams {\n    // redirect to get access_token\n\n    const params = new HttpParams({ fromObject: MsAuthService.paramsToObject(this.getTokenParams(state)) })\n      .set('response_type', 'token')\n      .set('resource', 'https://graph.microsoft.com')\n      .set('prompt', 'none');\n    console.info('MsAuthService::getAccessToken::params', params, ';');\n    return params;\n  }\n  */\n\n  public remoteSendEmail(risk_id: number, mail: IMail): Observable<IMail> {\n    return this.http\n      .post<IMail>(`/api/email/${mail.recipient}/${risk_id}`, void 0);\n  }\n}\n","module.exports = \"/*\\n * Top navigation\\n * Hide default border to remove 1px line.\\n */\\n.navbar-fixed-top {\\n  border: 0;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\\\" style=\\\"line-height: 2.68\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\"\\n     [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n    Glaucoma Risk Calculator\\n  </a>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n    <form class=\\\"form-inline col btn-group\\\" *ngIf=\\\"authService.loggedIn()\\\">\\n      <a class=\\\"nav-item nav-link btn btn-outline-info\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/admin/dashboard\\\">\\n        Dashboard\\n      </a>\\n      <button class=\\\"a nav-item nav-link btn\\\" (click)=\\\"logout()\\\">\\n        Logout\\n      </button>\\n    </form>\\n    <ul class=\\\"navbar-nav mr-auto\\\"></ul>\\n    <a href=\\\"http://glaucoma.org.au\\\"><img src=\\\"../../assets/reversed-logo.png\\\" alt=\\\"Glaucoma Australia logo\\\"/></a>\\n  </div>\\n\\n</nav>\\n\\n<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\\\"\\n     *ngIf=\\\"alertsService.alerts\\\">\\n  <app-alerts style=\\\"width: 100%\\\"></app-alerts>\\n</nav>\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../../api/auth/auth.service';\nimport { AlertsService } from '../alerts/alerts.service';\nimport { AppService } from '../app.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n  constructor(private router: Router,\n              public appService: AppService,\n              public authService: AuthService,\n              public alertsService: AlertsService) {\n  }\n\n  logout() {\n    this.router\n      .navigate(['auth/logout'])\n      .then(success => success ? console.info('NavbarComponent::state changed') : this.alertsService.alerts.push(\n        { msg: 'state didn\\'t change', type: 'warning' }),\n        err => this.alertsService.alerts.push({ msg: err, type: 'danger' })\n      )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AlertsModule } from '../alerts/alerts.module';\nimport { NavbarComponent } from './navbar.component';\n\n\n@NgModule({\n  imports: [CommonModule, RouterModule, NgbAlertModule, AlertsModule],\n  declarations: [NavbarComponent],\n  exports: [NavbarComponent]\n})\nexport class NavbarModule {\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"form\\\">\\n  <quill-editor #editor id=\\\"{{elementId}}\\\" [style]=\\\"{height: '200px'}\\\"\\n                (onEditorCreated)=\\\"setFocus($event)\\\"\\n                [formControl]=\\\"form.controls['editor']\\\"></quill-editor>\\n</form>\\n\"","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { QuillEditorComponent } from 'ngx-quill';\n\n\n@Component({\n  selector: 'app-richtext',\n  templateUrl: './richtext.component.html',\n  styleUrls: [\n    './richtext.component.css',\n    './../../../node_modules/quill/dist/quill.snow.css',\n    './../../../node_modules/quill/dist/quill.bubble.css'\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class RichTextComponent implements AfterViewInit, OnInit {\n  @Input() elementId: String;\n  @Output() whenEdited: EventEmitter<string> = new EventEmitter<string>();\n  @ViewChild('editor') editor: QuillEditorComponent;\n\n  form: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n  }\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      editor: ''\n    });\n  }\n\n  ngAfterViewInit() {\n    this.form.valueChanges.subscribe(content => this.whenEdited.emit(content.editor));\n  }\n\n  setFocus($event) {\n    $event.focus();\n  }\n\n  public patchValue(content?: string) {\n    this.form.controls['editor'].patchValue(\n      content ? content : `${this.form.controls['editor'].value} patched!`\n    );\n  }\n\n  public setValue(content: string) {\n    this.form.setValue({\n      editor: content || ''\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { QuillModule } from 'ngx-quill';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { RichTextComponent } from './richtext.component';\n\n@NgModule({\n  imports: [\n    CommonModule, ReactiveFormsModule,\n    QuillModule\n  ],\n  declarations: [RichTextComponent],\n  exports: [RichTextComponent]\n})\nexport class RichTextModule {\n}\n","module.exports = \"\"","module.exports = \"<table class=\\\"table\\\">\\n  <tbody>\\n  <tr>\\n    <td [style.background]=\\\"numToColour(0)\\\"></td>\\n    <td [style.background]=\\\"numToColour(25)\\\"></td>\\n    <td [style.background]=\\\"numToColour(50)\\\"></td>\\n    <td [style.background]=\\\"numToColour(75)\\\"></td>\\n    <td [style.background]=\\\"numToColour(100)\\\"></td>\\n  </tr>\\n  <tr>\\n    <td id=\\\"0\\\">{{risk_value}}</td>\\n    <td id=\\\"1\\\"></td>\\n    <td id=\\\"2\\\"></td>\\n    <td id=\\\"3\\\"></td>\\n    <td id=\\\"4\\\"></td>\\n    <td id=\\\"5\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\"","import { AfterViewInit, Component, Input } from '@angular/core';\n\nimport { numToColour } from '../colours';\n\n@Component({\n  selector: 'app-risk-pointer',\n  templateUrl: './risk-pointer.component.html',\n  styleUrls: ['./risk-pointer.component.css']\n})\nexport class RiskPointerComponent implements AfterViewInit {\n  @Input() risk_value: number;\n  numToColour = numToColour;\n\n  constructor() { }\n\n  ngAfterViewInit() {\n    // this.risk_value;\n  }\n}\n","module.exports = \"ng-gauge {\\n  margin: 16px;\\n  width: 300px;\\n  height: 300px;\\n  display: inline-block;\\n}\\n\"","module.exports = \"<div *ngIf=\\\"submitted\\\">\\n  <ng-gauge [bgRadius]=progressGraph.bgRadius\\n            [bgColor]=progressGraph.bgColor\\n            [rounded]=progressGraph.rounded\\n            [reverse]=progressGraph.reverse\\n            [animationSecs]=progressGraph.animationSecs\\n            [labels]=progressGraph.labels\\n            [segments]=progressGraph.segments\\n            *ngIf=\\\"gauge\\\" style=\\\"width: 100%; max-width: 30em; margin: 0;\\\">\\n  </ng-gauge>\\n  <h3 style=\\\"text-underline: single\\\">\\n    {{recommendation}}\\n  </h3>\\n  <h5 style=\\\"text-underline: single; font-style: italic;\\\">\\n    ({{recommendation_subtitle | lowercase}})\\n  </h5>\\n\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-block\\\">\\n      <h2>Glaucoma prevalence in your population is: {{riskQuiz.risk}}%.</h2>\\n\\n      <h3>This puts you in the\\n        <strong>{{most_at_risk}}</strong> most at risk subgroup.\\n        <span *ngIf=\\\"added_risk\\\">\\n          Adding in <strong>family risk</strong>, and you have:\\n          {{riskQuiz.client_risk}}% relative risk within your cohort.\\n        </span>\\n      </h3>\\n    </div>\\n  </div>\\n\\n  <h6>Based off submission:</h6>\\n\\n  <table class=\\\"table table-responsive table-striped\\\">\\n    <thead>\\n    <tr>\\n      <th *ngFor=\\\"let col of submissionHeader\\\">\\n        {{ col }}\\n      </th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr>\\n      <td *ngFor=\\\"let col of submissionHeader\\\">\\n        {{ submissionRow[col] }}\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n\\n  <br>\\n  <button class=\\\"btn btn-default\\\" (click)=\\\"redo()\\\">Redo</button>\\n  <br>\\n  <hr>\\n  <h5>Share with family and friends to calculate their own risk</h5>\\n  <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\" aria-label=\\\"Share\\\">\\n    <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"email\\\">\\n      <button class=\\\"btn btn-lg btn-warning\\\" (click)=\\\"openModal(sendEmailTemplate)\\\">Share as email</button>\\n      <ng-template #sendEmailTemplate>\\n        <div class=\\\"modal-body text-center\\\">\\n          <form class=\\\"container form-group\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-2\\\">\\n                <label class=\\\"col-form-label\\\" for=\\\"email\\\">\\n                  To:\\n                </label>\\n              </div>\\n              <div class=\\\"col-auto\\\">\\n                <input class=\\\"form-check-input\\\" placeholder=\\\"Email\\\" id=\\\"email\\\" #toEmail>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row\\\" [innerHtml]=\\\"templateService.getTpl('email') + ' ' + share_url\\\"></div>\\n            <button type=\\\"submit\\\" class=\\\"btn\\\" (click)=\\\"sendEmail(toEmail.value)\\\"\\n                    [disabled]=\\\"!toEmail.value.length\\\" [ngClass]=\\\"{'btn-outline-success': toEmail.value.length}\\\">\\n              Send email\\n            </button>\\n          </form>\\n        </div>\\n      </ng-template>\\n    </div>\\n    <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"facebook\\\">\\n      <a class=\\\"btn btn-lg btn-primary\\\" [href]=\\\"'https://www.facebook.com/sharer/sharer.php?u='+share_url\\\"\\n         target=\\\"_blank\\\">\\n        Share on facebook\\n      </a>\\n    </div>\\n    <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"twitter\\\">\\n      <a target=\\\"_blank\\\" class=\\\"btn btn-lg btn-info\\\" id=\\\"tweet\\\" #tweet\\n         [href]=\\\"'https://twitter.com/intent/tweet?text='+templateService.getTpl('twitter')+' '+share_url\\\"\\n         data-size=\\\"large\\\">\\n        Tweet\\n      </a>\\n    </div>\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"copy-link\\\">\\n      <button class=\\\"btn btn-lg btn-outline\\\" [class.btn-success]=\\\"isCopied\\\" ngxClipboard\\n              [cbContent]=\\\"share_url\\\" (cbOnSuccess)=\\\"isCopied = true\\\">\\n        Copy link\\n      </button>\\n    </div>\\n  </div>\\n  <hr>\\n  <button class=\\\"btn btn-secondary\\\" (click)=\\\"toggleCollapse()\\\" [class.btn-outline-secondary]=\\\"!isCollapsed\\\">\\n    Review references and submission\\n  </button>\\n  <div [ngbCollapse]=\\\"isCollapsed\\\" class=\\\"card card-block card-header\\\" *ngIf=\\\"!isCollapsed\\\">\\n    <div class=\\\"well well-lg\\\">\\n      <h6>Your submission</h6>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-3\\\"><em>Age</em></div>\\n        <div class=\\\"col-xs-9  pull-left\\\"><strong>&nbsp;{{ riskQuiz.riskQuiz.age }}</strong></div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-3\\\"><em>Gender</em></div>\\n        <div class=\\\"col-xs-9 pull-left\\\"><strong>&nbsp;{{ riskQuiz.riskQuiz.gender }}</strong></div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-3\\\"><em>Ethnicity</em></div>\\n        <div class=\\\"col-xs-9 pull-left\\\"><strong>&nbsp;{{ riskQuiz.riskQuiz.ethnicity }}</strong></div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-3\\\"><em>Sibling with glaucoma</em></div>\\n        <div class=\\\"col-xs-9 pull-left\\\"><strong>&nbsp;{{ riskQuiz.riskQuiz.sibling || 'false' }}</strong></div>\\n      </div>\\n      <div class=\\\"row\\\" style=\\\"margin-bottom: 5px\\\">\\n        <div class=\\\"col-xs-3\\\"><em>Parent with glaucoma</em></div>\\n        <div class=\\\"col-xs-9 pull-left\\\"><strong>&nbsp;{{ riskQuiz.riskQuiz.parent || 'false' }}</strong></div>\\n      </div>\\n\\n      <!--<app-risk-pointer [risk_value]=\\\"riskQuiz.client_risk\\\"></app-risk-pointer>-->\\n\\n      <ngx-charts-pie-grid *ngIf=\\\"pie_grid\\\"\\n                           [view]=\\\"pieView\\\"\\n                           [scheme]=\\\"colorScheme\\\"\\n                           [results]=\\\"pieData\\\"\\n                           autoScale=\\\"true\\\"\\n                           (select)=\\\"onPieGridSelect($event)\\\">\\n      </ngx-charts-pie-grid>\\n\\n      <hr>\\n\\n      <!--\\n      (legendLabelClick)=\\\"onLegendLabelClick($event)\\\"\\n      [scheme]=\\\"colorScheme\\\"\\n      [gradient]=\\\"gradient\\\"\\n      (select)=\\\"treemapSelect($event)\\\"-->\\n      <h4>Risk compared with other ethnicities of same age and gender</h4>\\n      <div class=\\\"row\\\" *ngIf=\\\"show_treemap\\\">\\n        <p>Hover over each box to view the comparative risk score.</p>\\n        <ngx-charts-tree-map [labelFormatting]=\\\"labelFormat\\\"\\n                             [results]=\\\"riskQuiz.relative_risks.graphed_rr\\\">\\n        </ngx-charts-tree-map>\\n\\n        <table class=\\\"table table-responsive table-striped\\\">\\n          <thead>\\n          <tr>\\n            <th>Study</th>\\n            <th>Prevalence</th>\\n          </tr>\\n          </thead>\\n          <tbody>\\n          <tr *ngFor=\\\"let leg of treemap_legend\\\" [style.background-color]=\\\"leg.color\\\">\\n            <td>\\n              {{leg.name}}\\n            </td>\\n            <td>\\n              {{leg.value}}\\n            </td>\\n          </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <!--\\n      <div class=\\\"row\\\">\\n        <pre>multiplicative_risks = {{riskQuiz.multiplicative_risks|json}}</pre>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <pre>relative_risks = {{riskQuiz.relative_risks|json}}</pre>\\n      </div>\\n      -->\\n\\n      <!--\\n      <h4>Other charts</h4>\\n\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row justify-content-md-center\\\">\\n          <div class=\\\"col\\\" *ngIf=\\\"show_pie_adv\\\">\\n            <ngx-charts-advanced-pie-chart [view]=\\\"pieAdvDim\\\"\\n                                           [scheme]=\\\"pieAdvColorScheme\\\"\\n                                           [results]=\\\"pieAdvData\\\"\\n                                           [gradient]=\\\"pieAdvGradient\\\"\\n\\n                                           (select)=\\\"pieAdvOnSelect($event)\\\">\\n            </ngx-charts-advanced-pie-chart>\\n            <!-- [total-label]=\\\"pieAdvLabel\\\" -->\\n      <!--\\n          </div>\\n        </div>\\n      </div>\\n      -->\\n\\n      <h4>Notes</h4>\\n      <ul *ngFor=\\\"let note of notes\\\">\\n        <li>{{note}}</li>\\n      </ul>\\n      <ul>\\n        <li [innerHTML]=\\\"html_of_last_note\\\"></li>\\n      </ul>\\n\\n      <h4>References</h4>\\n      <div [innerHTML]=\\\"html_of_all_refs\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\"","import * as math from 'mathjs';\n\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { AfterContentInit, Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\n\nimport { GaugeLabel, GaugeSegment } from 'ng-gauge/dist/gauge';\nimport { calc_relative_risk, familial_risks_from_study, IMultiplicativeRisks, IRiskJson } from 'glaucoma-risk-calculator-engine';\n\nimport { IRiskQuiz, RiskQuiz } from '../risk-quiz-form/risk-quiz.model';\nimport { RiskResService } from '../../api/risk_res/risk_res.service';\nimport { MsAuthService } from '../ms-auth/ms-auth.service';\nimport { colours, numToColour } from '../colours';\nimport { RiskStatsService } from '../../api/risk_stats/risk-stats.service';\nimport { TemplateService } from '../../api/template/template.service';\n// import { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { AlertsService } from '../alerts/alerts.service';\nimport { switchMap } from 'rxjs/operators';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\n\n\nmath.config({\n  number: 'BigNumber',  // Default type of number:\n                        // 'number' (default), 'BigNumber', or 'Fraction'\n  precision: 5         // Number of significant digits for BigNumbers\n});\n\n\nconst omit = (obj: {}, omitKeys: string[]): {} =>\n  Object\n    .keys(obj)\n    .reduce((result, key) => {\n        if (omitKeys.indexOf(key) > -1)\n          result[key] = obj[key];\n        return result;\n      }, {}\n    );\n\nexport interface IItem {\n  id?: string;\n  type?: string;\n  issued?: string;\n  DOI?: string;\n  URL?: string;\n  chapter?: string;\n  publisher?: string;\n  issn?: string;\n  isbn?: string;\n  author?: string;\n  series?: string;\n  booktitle?: string;\n  title?: string;\n  number?: string;\n  pages?: string;\n  note?: string;\n  edition?: string;\n  editor?: string;\n  address?: string;\n  annote?: string;\n  journal?: string;\n  volume?: string;\n}\n\n@Component({\n  selector: 'app-risk-quiz-form-submitted',\n  templateUrl: './risk-quiz-form-submitted.component.html',\n  styleUrls: ['./risk-quiz-form-submitted.component.css']\n})\nexport class RiskQuizFormSubmittedComponent implements OnInit, AfterContentInit {\n  @ViewChild('tweet') tweet: HTMLAnchorElement;\n  @Input() riskQuiz: RiskQuiz;\n  @Input() submitted = false;\n  most_at_risk = '';\n  isCollapsed = true;\n  id: number = undefined;\n  share_url: string;\n  recommendation: string;\n  recommendation_subtitle: string;\n\n  progressGraph = {\n    bgRadius: 60,\n    bgColor: colours.indigo,\n    rounded: false,\n    reverse: false,\n    animationSecs: 1,\n    labels: [],\n    segments: []\n  };\n\n  @Output() submittedChange: EventEmitter<boolean> = new EventEmitter();\n\n  modalRef: NgbModalRef;\n\n  // <pie grid>\n  colorScheme = { domain: [colours.teal, colours.darkred, colours.gold, colours.grey] };\n  pieAdvColorScheme = this.colorScheme;\n  // line, area\n  autoScale = true;\n  pieData = [\n    /* { 'name': 'France', 'value': 7200000 } */\n  ];\n\n  // </pie grid>\n\n  // <advanced-pie-chart>\n  pieView: [760, 760];\n  pieAdvDim: any[] = [700, 400];\n  pieAdvData = [];\n  pieAdvLabel = 'times more at risk';\n  pieAdvGradient = true;\n\n  // </advanced-pie-chart>\n\n  pie_grid = false;\n  show_pie_adv = false;\n  added_risk = false;\n  gauge = false;\n\n  show_treemap = false;\n  treemap_legend: Array<{color: string, name: string, value: number}> = [];\n\n  submissionRow: {};\n  submissionHeader: string[] = [];\n\n  html_of_all_refs: HTMLAllCollection;\n  html_of_last_note: HTMLAllCollection;\n  notes: string[];\n  labelFormat = (label: {\n    data: {\n      data: {name: string, value: number},\n      x: number, y: number, width: number, height: number,\n      fill: string, label: string, value: number, valueType: undefined\n    },\n    label: string, value: number\n  }): string => {\n    const m = {\n      'Chinese [Singapore: urban]': 'Chinese',\n      'White European (Canadian; Italian; Irish; Welsh; Scottish)': 'White (Can.)',\n      'White (Northern European: Australian)': 'White (Aus.)'\n    };\n    if (this.treemap_legend.findIndex(o => o.color === label.data.fill) < 0)\n      this.treemap_legend.push({\n        color: label.data.fill,\n        name: label.data.data.name,\n        value: label.data.data.value\n      });\n    this.treemap_legend.sort((a, b) => a.value < b.value as any);\n    return m[label.data.data.name] || label.data.data.name;\n  };\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private modalService: NgbModal,\n              private riskStatsService: RiskStatsService,\n              private riskResService: RiskResService,\n              public templateService: TemplateService,\n              private alertsService: AlertsService,\n              private msAuthService: MsAuthService) {\n\n  }\n\n  redo() {\n    this.submittedChange.emit(false);\n    this.router\n      .navigate(['/'])\n      .catch(console.error);\n  }\n\n  ngOnInit() {\n    if (!(this.riskQuiz instanceof RiskQuiz))\n      this.riskQuiz = new RiskQuiz(this.riskQuiz);\n    this.templateService\n      .readBatch()\n      .subscribe(() => this.tweet.href = this.templateService.getTpl('twitter'));\n  }\n\n  ngAfterContentInit() {\n    if (this.submitted)\n      this.prepareView();\n    else\n      this.route\n        .params\n        .pipe(\n          switchMap((params: Params) => {\n            this.id = this.riskResService.id = +params['id'];\n            return this.riskResService.read(this.id);\n          })\n        )\n        .subscribe((riskQuiz: IRiskQuiz | any) => {\n          this.riskQuiz = new RiskQuiz(riskQuiz);\n          this.submitted = true;\n          this.prepareView();\n        });\n  }\n\n  public toggleCollapse() {\n    this.isCollapsed = !this.isCollapsed;\n  }\n\n  idWithUrl(): string {\n    return `${MsAuthService.getHostOrigin()}/results/${this.id}`;\n  }\n\n  onPieGridSelect(event) {\n    console.log(event);\n  }\n\n  pieAdvOnSelect(event) {\n    console.log(event);\n  }\n\n  sendEmail(recipient: string) {\n    this.msAuthService\n      .remoteSendEmail(this.id, {\n        recipient: recipient,\n        subject: this.templateService.getTpl('email_subject'),\n        content: `${this.templateService.getTpl('email')} ${this.share_url}`\n      })\n      .subscribe(email => console.info('RiskQuizFormSubmittedComponent::sendEmail::email', email) || this.alertsService.add({\n        type: 'info', msg: 'Sent email'\n      }), console.error);\n    this.modalRef.close();\n  }\n\n  private gaugeView(risk_pc: number, risk_pc_as_s: string) {\n    this.progressGraph.labels.push(\n      new GaugeLabel({\n        color: colours.white,\n        text: 'risk',\n        x: 0,\n        y: 20,\n        fontSize: '1em'\n      }),\n      new GaugeLabel({\n        color: numToColour(risk_pc),\n        text: risk_pc_as_s,\n        x: 0,\n        y: 0,\n        fontSize: '2em'\n      })\n    );\n    this.progressGraph.segments.push(\n      new GaugeSegment({\n        value: risk_pc,\n        color: numToColour(risk_pc),\n        borderWidth: 20\n      })\n    );\n    this.gauge = true;\n  }\n\n  private pieAdvView(multiplicative_risks: IMultiplicativeRisks) {\n    this.pieAdvData = Object\n      .keys(multiplicative_risks)\n      .map(k => ({ name: k, value: multiplicative_risks[k] }))\n      .filter(o => o.value > 1);\n    this.show_pie_adv = this.added_risk = this.riskQuiz.riskQuiz.sibling || this.riskQuiz.riskQuiz.parent;\n  }\n\n  // modal\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.open(template);\n    // = this.modalService.show(template, { class: 'modal-sm' });\n    this.modalRef.componentInstance.name = 'World';\n  }\n\n  private prepareView() {\n    this.submissionHeader = Object\n      .keys(this.riskQuiz.riskQuiz)\n      .filter(k => ['createdAt', 'updatedAt', 'id', 'client_risk'].indexOf(k) === -1);\n    this.submissionRow =\n      Object\n        .keys(this.riskQuiz.riskQuiz)\n        .map(k => ({ [k]: this.riskQuiz.riskQuiz[k] != null ? this.riskQuiz.riskQuiz[k] : false }))\n        .reduce((a, b) => Object.assign(a, b), {})\n    ;\n\n    this.riskStatsService\n      .read('latest')\n      .subscribe(content => {\n          this.riskStatsService.risk_json = content.risk_json as IRiskJson;\n          try {\n            this.riskQuiz.calcRisk(this.riskStatsService.risk_json);\n          } catch (e) {\n            this.router\n              .navigate(['/'])\n              .catch(console.error);\n          }\n\n          this.html_of_all_refs = JSON.parse(this.riskStatsService.risk_json.html_of_all_refs);\n          this.html_of_last_note = this.riskStatsService.risk_json.global_notes.pop() as any;\n          this.notes = this.riskStatsService.risk_json.global_notes;\n          this.riskStatsService.risk = this.riskQuiz.risk;\n          this.riskQuiz.ref = this.riskStatsService.risk_json.studies[this.riskQuiz.study].ref;\n          // this.riskQuiz.prepareRef();\n\n          const fam_risk = familial_risks_from_study(this.riskStatsService.risk_json, this.riskQuiz.toJSON());\n          const risk_pc =\n            (pc => ((r => r > 100 ? 100 : r)(fam_risk.reduce((a, b) => a + b, 1) + pc)))(\n              math.multiply(\n                math.divide(this.riskQuiz.risks.lastIndexOf(this.riskQuiz.risk) + 1, this.riskQuiz.risks.length),\n                100\n              ));\n          // const risk_pc = get_risk_pc.call(this);\n          const risk_pc_as_s: string = (_risk_pc => {\n            switch (true) {\n              case math.smallerEq(_risk_pc, 25):\n                return 'least';\n              case math.smallerEq(_risk_pc, 50):\n                return 'average';\n              case math.smallerEq(_risk_pc, 75):\n                return '2nd greatest';\n              case math.larger(_risk_pc, 75):\n              default:\n                return 'greatest';\n            }\n          })(risk_pc);\n          /*math.format(risk_pc, 6)*/\n          /*(fmt_s => `${fmt_s.lastIndexOf('.') > -1 && fmt_s.length > 3 ? fmt_s.slice(0, -1) : risk_pc}%`)(\n           math.format(risk_pc, 6)\n           )*/\n          this.most_at_risk =\n            `${this.riskQuiz.risks.lastIndexOf(this.riskQuiz.risk) + 1} / ${this.riskQuiz.risks.length}`;\n          this.riskQuiz.relative_risks = calc_relative_risk(this.riskStatsService.risk_json, this.riskQuiz.riskQuiz);\n          this.show_treemap = true;\n\n          this.gaugeView(risk_pc, risk_pc_as_s);\n          this.pieAdvView(this.riskQuiz.multiplicative_risks);\n\n          this.riskQuiz.client_risk = +risk_pc.toPrecision(4);\n\n          this.recommendation = 'We recommend you see an eye-health professional ';\n          if (risk_pc <= 25) {\n            this.recommendation += ' in the next two years.';\n            this.recommendation_subtitle = 'Unless you\\'ve seen one in the last 2 years';\n          } else if (risk_pc <= 50) {\n            this.recommendation += ' in the next year.';\n            this.recommendation_subtitle = 'Unless you\\'ve seen one in the last year';\n          } else if (risk_pc <= 75) {\n            this.recommendation += ' in the next 6 months.';\n            this.recommendation_subtitle = 'Unless you\\'ve seen one recently.';\n          } else {\n            this.recommendation += ' ASAP.';\n            this.recommendation_subtitle = 'Unless you\\'ve seen one recently.';\n          }\n\n          if (this.id == null)\n            this.riskResService\n              .create(this.riskQuiz.toJSON())\n              .subscribe(r => {\n                this.id = this.riskResService.id = r.id;\n                this.share_url = this.idWithUrl();\n              }, console.error);\n          else this.share_url = this.idWithUrl();\n        },\n        console.error\n      );\n  }\n}\n","import { Routes } from '@angular/router';\n\nimport { RiskQuizFormSubmittedComponent } from './risk-quiz-form-submitted.component';\n\nexport const riskQuizFormSubmittedRoutes: Routes = [\n  { path: 'results', component: RiskQuizFormSubmittedComponent },\n  { path: 'results/:id', component: RiskQuizFormSubmittedComponent }\n];\n","module.exports = \"legend {\\n  font-size: medium;\\n  font-weight: bold;\\n}\\n\\n.form-check-label {\\n  font-weight: unset;\\n}\\n\\nlabel, .label {\\n  font-weight: bold;\\n}\\n\\n.btn:not(:disabled):not(.disabled) {\\n  font-weight: bold;\\n}\\n\"","module.exports = \"<main *ngIf=\\\"!submitted\\\">\\n  <h5>Complete the following to calculate your risk of developing glaucoma, and what to do about it.</h5>\\n\\n  <form [formGroup]=\\\"riskForm\\\" *ngIf=\\\"active\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <span class=\\\"form-check-label label\\\" style=\\\"padding-left: 0\\\">Gender</span>\\n    <fieldset class=\\\"form-group\\\" id=\\\"gender\\\" name=\\\"gender\\\">\\n      <div class=\\\"form-check\\\">\\n        <label class=\\\"form-check-label\\\">\\n          <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"gender\\\" id=\\\"male\\\" value=\\\"male\\\"\\n                 formControlName=\\\"gender\\\" tabindex=\\\"0\\\">\\n          Male\\n        </label>\\n      </div>\\n      <div class=\\\"form-check\\\">\\n        <label class=\\\"form-check-label\\\">\\n          <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"gender\\\" id=\\\"female\\\" value=\\\"female\\\"\\n                 formControlName=\\\"gender\\\">\\n          Female\\n        </label>\\n      </div>\\n      <div *ngIf=\\\"formErrors.gender\\\" class=\\\"alert alert-danger\\\">\\n        {{ formErrors.gender }}\\n      </div>\\n    </fieldset>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"age\\\">Age</label>\\n      <input type=\\\"number\\\" id=\\\"age\\\" class=\\\"form-control\\\"\\n             formControlName=\\\"age\\\" placeholder=\\\"Specify age\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"ethnicity\\\">Ethnicity</label>\\n      <ng-select [items]=\\\"ethnicities\\\"\\n                 (selected)=\\\"selected_ethnicity($event)\\\"\\n                 (data)=\\\"selected_ethnicity($event)\\\"\\n                 (close)=\\\"doClose()\\\"\\n                 id=\\\"ethnicity\\\" formControlName=\\\"ethnicity\\\"\\n                 placeholder=\\\"Search for ethnicity\\\">\\n      </ng-select>\\n    </div>\\n\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"row\\\">\\n        <fieldset class=\\\"col-sm\\\">\\n          <legend>Family history of glaucoma</legend>\\n\\n          <div class=\\\"form-check form-check-inline container\\\">\\n            <div class=\\\"row\\\">\\n              <label class=\\\"form-check-label col col-sm\\\">\\n                Parent\\n                <input class=\\\"form-control form-check-input\\\" type=\\\"checkbox\\\" id=\\\"parent\\\" formControlName=\\\"parent\\\">\\n              </label>\\n              <label class=\\\"form-check-label col col-sm\\\">\\n                Sibling\\n                <input class=\\\"form-control form-check-input\\\" type=\\\"checkbox\\\" id=\\\"sibling\\\" formControlName=\\\"sibling\\\">\\n              </label>\\n            </div>\\n          </div>\\n        </fieldset>\\n\\n        <fieldset class=\\\"col-sm\\\">\\n          <legend>Other health issues</legend>\\n\\n          <div class=\\\"form-check form-check-inline container\\\">\\n            <div class=\\\"row\\\">\\n              <label class=\\\"form-check-label col col-sm\\\">\\n                Myopia\\n                <input class=\\\"form-control form-check-input\\\" type=\\\"checkbox\\\" id=\\\"myopia\\\" formControlName=\\\"myopia\\\">\\n              </label>\\n              <label class=\\\"form-check-label col col-sm\\\">\\n                Diabetes\\n                <input class=\\\"form-control form-check-input\\\" type=\\\"checkbox\\\" id=\\\"diabetes\\\" formControlName=\\\"diabetes\\\">\\n              </label>\\n            </div>\\n          </div>\\n        </fieldset>\\n\\n        <div class=\\\"col-sm\\\" style=\\\"padding-top: 15px\\\">\\n          <button type=\\\"submit\\\" class=\\\"submit btn \\\" style=\\\"width: 100%; height: 100%\\\"\\n                  [class.btn-primary]=\\\"riskForm.valid\\\"\\n                  [class.btn-outline-secondary]=\\\"!riskForm.valid\\\"\\n                  [disabled]=\\\"!riskForm.valid\\\">\\n            Calculate risk\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</main>\\n\\n<app-risk-quiz-form-submitted [riskQuiz]=\\\"riskQuiz\\\" [(submitted)]=\\\"submitted\\\" *ngIf=\\\"submitted\\\">\\n</app-risk-quiz-form-submitted>\\n\"","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ethnicity2study, IRiskJson } from 'glaucoma-risk-calculator-engine';\n\nimport { RiskStatsService } from '../../api/risk_stats/risk-stats.service';\nimport { RiskQuiz } from './risk-quiz.model';\n\n\n@Component({\n  selector: 'app-risk-quiz-form',\n  templateUrl: './risk-quiz-form.component.html',\n  styleUrls: ['./risk-quiz-form.component.css']\n})\nexport class RiskQuizFormComponent implements OnInit, AfterViewInit {\n  riskQuiz: RiskQuiz = new RiskQuiz({} as any);\n  submitted = false;\n  isCopied = false;\n  // TODO: Workaround until NgForm has a reset method (#6822)\n  active = true;\n  ethnicity2study: {};\n\n  riskForm: FormGroup;\n\n  ethnicities: string[];\n  all_ethnicities: string[];\n\n  formErrors = {\n    gender: '',\n    age: '',\n    ethnicity: '',\n    myopia: '',\n    diabetes: ''\n  };\n\n  validationMessages = {\n    gender: {\n      'required': 'Gender is required.',\n    },\n    age: {\n      'required': 'Age is required.'\n    },\n    ethnicity: {\n      'required': 'Ethnicity is required.'\n    }\n  };\n  public doClose = () => document.getElementById('parent').focus();\n\n  constructor(private fb: FormBuilder,\n              private riskStatsService: RiskStatsService) {\n  }\n\n  ngAfterViewInit() {\n    this.riskStatsService.read('latest').subscribe(\n      content => {\n        this.riskStatsService.risk_json = content.risk_json as IRiskJson;\n        this.ethnicity2study = ethnicity2study(this.riskStatsService.risk_json);\n        this.all_ethnicities = this.ethnicities = Object.keys(this.ethnicity2study).sort();\n      },\n      console.error\n    );\n  }\n\n  ngOnInit(): void {\n    this.buildForm()\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.riskForm.value.ethnicity != null && this.riskForm.value.ethnicity.length && this.riskForm.value.ethnicity instanceof Array)\n      this.riskForm.value.ethnicity = this.riskForm.value.ethnicity[0].id;\n    this.riskQuiz = new RiskQuiz(this.riskForm.value);\n  }\n\n  addRisk() {\n    this.riskQuiz = new RiskQuiz({} as any);\n    this.buildForm();\n\n    this.active = false;\n    setTimeout(() => this.active = true, 0);\n  }\n\n  buildForm(): void {\n    this.riskForm = this.fb.group({\n      age: [this.riskQuiz.riskQuiz.age, [Validators.required]],\n      gender: [this.riskQuiz.riskQuiz.gender, [Validators.required]],\n      ethnicity: [this.riskQuiz.riskQuiz.ethnicity, Validators.required],\n      sibling: [this.riskQuiz.riskQuiz.sibling],\n      parent: [this.riskQuiz.riskQuiz.parent],\n      myopia: [this.riskQuiz.riskQuiz.myopia],\n      diabetes: [this.riskQuiz.riskQuiz.diabetes]\n    });\n\n    this.riskForm.valueChanges.subscribe(data => this.onValueChanged(data));\n\n    this.onValueChanged(); // (re)set validation messages now\n  }\n\n  onValueChanged(data?: any) {\n    if (!this.riskForm) return;\n    const form = this.riskForm;\n\n    let hasError = false;\n    for (const field in this.formErrors)\n      if (this.formErrors.hasOwnProperty(field)) {\n        // clear previous error message (if any)\n        this.formErrors[field] = '';\n        const control = form.get(field);\n\n        if (control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) {\n            if (control.errors.hasOwnProperty(key))\n              this.formErrors[field] += messages[key] + ' ';\n          }\n          hasError = true;\n        }\n      }\n    // if (!hasError) this.riskQuiz.calcRisk(risk_json)\n  }\n\n  public selected_ethnicity(ethnicity: Array<{id: string, text: string}>): void {\n    if (ethnicity == null || !ethnicity.length) return;\n    this.riskQuiz.riskQuiz.ethnicity = this.riskForm.value.ethnicity = ethnicity[0].id;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { NgbCollapseModule, NgbModalModule, NgbPaginationModule, NgbTypeaheadModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { GaugeModule } from 'ng-gauge/dist/gauge';\n\nimport { RiskStatsService } from '../../api/risk_stats/risk-stats.service';\nimport { RiskResService } from '../../api/risk_res/risk_res.service';\nimport { RiskQuizFormSubmittedComponent } from '../risk-quiz-form-submitted/risk-quiz-form-submitted.component';\nimport { riskQuizFormSubmittedRoutes } from '../risk-quiz-form-submitted/risk-quiz-form-submitted.routes';\nimport { RiskPointerComponent } from '../risk-pointer/risk-pointer.component';\nimport { RiskQuizFormComponent } from './risk-quiz-form.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule, ReactiveFormsModule, BrowserAnimationsModule, FormsModule,\n    RouterModule, RouterModule.forChild(riskQuizFormSubmittedRoutes),\n    NgbPaginationModule.forRoot(), NgbCollapseModule.forRoot(),\n    NgbTypeaheadModule.forRoot(), NgbModalModule.forRoot(),\n    GaugeModule, ClipboardModule, NgSelectModule, NgxChartsModule\n  ],\n  providers: [RiskStatsService, RiskResService],\n  declarations: [\n    RiskQuizFormComponent, RiskQuizFormSubmittedComponent, RiskPointerComponent\n  ],\n  exports: [RiskQuizFormComponent]\n})\nexport class RiskQuizFormModule {\n}\n","import {\n  calc_default_multiplicative_risks,\n  ethnicity2study,\n  Gender,\n  IInput,\n  IMultiplicativeRisks,\n  IRelativeRisk,\n  IRiskJson,\n  risk_from_study,\n  risks_from_study,\n  Study\n} from 'glaucoma-risk-calculator-engine';\nimport { IItem } from '../risk-quiz-form-submitted/risk-quiz-form-submitted.component';\n\nexport interface IRiskQuiz {\n  age: number;\n  gender: Gender;\n  ethnicity: string;\n  myopia: boolean;\n  diabetes: boolean;\n  study: Study;\n  ocular_disease_history?: string[];\n  ocular_surgery_history?: string[];\n  other_info?: string;\n  family_history_of_glaucoma?: string[];\n  email?: string;\n  sibling?: boolean; // sibling has glaucoma?\n  parent?: boolean;  // parent has glaucoma?\n}\n\ninterface IIRiskQuiz {\n  riskQuiz: IRiskQuiz\n}\n\nexport class RiskQuiz implements IIRiskQuiz {\n  public risk: number;\n  public relative_risks: IRelativeRisk;\n  public client_risk: number;\n  public riskLength: number;\n  public risks: number[];\n  public ref: Array<IItem>;\n  public study: Study;\n  public multiplicative_risks: IMultiplicativeRisks;\n\n  constructor(public riskQuiz: IRiskQuiz) {\n  }\n\n  calcRisk(risk_json: IRiskJson) {\n    this.study = ethnicity2study(risk_json)[this.riskQuiz.ethnicity];\n    const input: IInput = {\n      study: this.study,\n      age: this.riskQuiz.age,\n      gender: this.riskQuiz.gender as any\n    } as IInput;\n    this.risk = +risk_from_study(risk_json, input).toPrecision(4);\n    this.risks = risks_from_study(risk_json, input);\n    this.multiplicative_risks = calc_default_multiplicative_risks(risk_json, {\n      age: this.riskQuiz.age,\n      diabetes: this.riskQuiz.diabetes,\n      myopia: this.riskQuiz.myopia,\n      family_history: this.riskQuiz.sibling || this.riskQuiz.parent\n    });\n  }\n\n  toJSON() {\n    return {\n      age: this.riskQuiz.age,\n      gender: this.riskQuiz.gender,\n      ethnicity: this.riskQuiz.ethnicity,\n      study: this.study,\n      parent: this.riskQuiz.parent,\n      sibling: this.riskQuiz.sibling,\n      myopia: this.riskQuiz.myopia,\n      diabetes: this.riskQuiz.diabetes,\n      client_risk: this.client_risk\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<ng-container *ngIf=\\\"serverStatus.version\\\">\\n  {{serverStatus.version}}\\n</ng-container>\\n\"","import { Component, Input, OnInit } from '@angular/core';\n\nimport { ServerStatusService } from '../../api/server-status/server-status.service';\nimport { ServerStatus } from '../../api/ServerStatus';\n\n\n@Component({\n  selector: 'app-api-version',\n  templateUrl: './server-status.component.html',\n  styleUrls: ['./server-status.component.css']\n})\nexport class ServerStatusComponent implements OnInit {\n  @Input() serverStatus: ServerStatus = {} as ServerStatus;\n\n  constructor(private serverStatusService: ServerStatusService) {\n  }\n\n  ngOnInit() {\n    this.serverStatus = { version: 'App 0.0.36; ' };\n    this.serverStatusService\n      .get()\n      .subscribe(serverStatus => this.serverStatus.version += `API ${serverStatus.version}`,\n        () => this.serverStatus.version += 'API server not available'\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ServerStatusService } from '../../api/server-status/server-status.service';\nimport { ServerStatusComponent } from './server-status.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [ServerStatusService],\n  declarations: [ServerStatusComponent],\n  exports: [ServerStatusComponent]\n})\n\nexport class ServerStatusModule {\n}\n","module.exports = \".red-border {\\n  border: solid 0.1em red !important;\\n}\\n\\n.btn-info.disabled, .btn-info:disabled {\\n  background-color: darkgrey;\\n  border-color: #9E9E9E;\\n}\\n\"","module.exports = \"<app-richtext [elementId]=\\\"'contents'\\\" (whenEdited)=\\\"onEdited($event)\\\" #editor>\\n</app-richtext>\\n\\n<form class=\\\"form-group\\\" [formGroup]=\\\"form\\\">\\n  <label for=\\\"email_subject\\\">Email subject</label>\\n  <input placeholder=\\\"Email subject\\\" id=\\\"email_subject\\\" name=\\\"email_subject\\\" formControlName=\\\"email_subject\\\"\\n         class=\\\"form-control\\\" required/>\\n\\n  <label for=\\\"twitter\\\">Twitter</label>\\n  <textarea class=\\\"form-control\\\" [ngClass]=\\\"{'red-border': !validTwitterLength()}\\\"\\n            placeholder=\\\"Twitter\\\" id=\\\"twitter\\\" formControlName=\\\"twitter\\\" required>\\n  </textarea>\\n  <small class=\\\"form-text text-muted\\\">\\n    <code [ngClass]=\\\"{'text-muted': validTwitterLength()}\\\">{{form.value.twitter.length}}</code> characters\\n  </small>\\n\\n  <label for=\\\"facebook\\\">Facebook</label>\\n  <textarea class=\\\"form-control\\\" placeholder=\\\"Facebook\\\" id=\\\"facebook\\\" formControlName=\\\"facebook\\\" required></textarea>\\n  <small class=\\\"form-text text-muted\\\">\\n    <code class=\\\"text-muted\\\">{{form.value.facebook.length}}</code> characters\\n  </small>\\n\\n  <button type=\\\"submit\\\" class=\\\"btn btn-info btn-lg\\\" style=\\\"margin-top: 1em\\\"\\n          (click)=\\\"save()\\\" [disabled]=\\\"!validTwitterLength() || !form.valid\\\">\\n    Save\\n  </button>\\n</form>\\n\"","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { TemplateService } from '../../api/template/template.service';\nimport { ITemplate, ITemplateBase } from '../../api/template/template';\nimport { AlertsService } from '../alerts/alerts.service';\nimport { RichTextComponent } from '../richtext/richtext.component';\n\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['./template.component.css']\n})\nexport class TemplateComponent implements OnInit, AfterViewInit {\n  @ViewChild('editor') editor: RichTextComponent;\n  form: FormGroup;\n\n  constructor(private fb: FormBuilder,\n              private alertsService: AlertsService,\n              private templateService: TemplateService) {\n    this.form = this.fb.group({\n      email_subject: ['', Validators.required],\n      twitter: ['', [Validators.required, Validators.maxLength(240)]],\n      facebook: ['', Validators.required],\n      // email: this.editor.form.controls\n      // editor: this.editor.form.controls\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    this.templateService\n      .readBatch()\n      .subscribe(() => {\n        const values = Array.from(this.templateService.templates.keys())\n          .filter(kind => kind !== 'email')\n          .reduce(\n            (obj, kind) => Object.assign(obj, { [kind]: this.templateService.getTpl(kind) }), {})\n        ;\n        if (Object.keys(values).length) {\n          this.editor.setValue(this.templateService.getTpl('email'));\n          this.form.setValue(values);\n        }\n        }\n      )\n  }\n\n  save() {\n    // novalidate [ngClass]=\"{'was-validated': (form.touched || form.dirty) && !form.valid }\"\n\n    const now = new Date().toISOString();\n\n    const templates: ITemplateBase[] = [\n      {\n        contents: this.templateService.getTpl('email'),\n        kind: 'email',\n        createdAt: now\n      }\n    ].concat(\n      Object\n        .keys(this.form.value)\n        .map(k => ({ kind: k, contents: this.form.value[k], createdAt: now }))\n    );\n\n    // reactive forms should validate, but doesn't, so here is a hack:\n    let invalid = false;\n    for (const template of templates) {\n      if ((!template.contents || template.contents.length < 1)) {\n        if (template.kind !== 'email')\n          this.form.controls[template.kind].setErrors({ 'incorrect': true });\n        else\n          this.editor.form.setErrors({ 'incorrect': true });\n        invalid = true;\n      }\n    }\n    if (invalid) {\n      this.form.markAsDirty();\n      this.alertsService.add({ type: 'warning', msg: 'Add template for each' });\n    } else\n      this.tplBatchCreate(templates, (err, created_templates) => {\n        if (err != null) this.alertsService.add(err);\n        else this.alertsService.add({ type: 'info', msg: 'Updated templates' })\n      });\n  };\n\n  tplCreate(new_template: ITemplateBase, cb) {\n    if (\n      new_template == null) return cb(new TypeError('new_template must be defined'));\n    this.templateService\n      .create(new_template)\n      .subscribe(template => this.handleTemplate(template, template.kind, cb), this.handleError.bind(this))\n  };\n\n  tplBatchCreate(new_templates: ITemplateBase[], cb) {\n    if (new_templates == null) return cb(new TypeError('new_templates must be defined'));\n    this.templateService\n      .createBatch(new_templates)\n      .subscribe(templates => {\n          templates.templates\n            .forEach(template => this.handleTemplate(template, template.kind));\n          return cb(void 0, templates)\n        },\n        cb\n      )\n  };\n\n  tplRead(createdAt: string | Date, kind: string, cb: (Error, string?) => void) {\n    this.templateService.read(createdAt, kind)\n      .subscribe((template: ITemplate) => {\n          this.templateService.templates.set(kind, template);\n          return cb(void 0, template);\n        },\n        error => {\n          this.alertsService.add({ type: 'warning', msg: error });\n          return cb(error);\n        }\n      )\n  };\n\n  onEdited(content: string) {\n    this.templateService.setTpl(content);\n  }\n\n  private init(kind: string) {\n    this.tplRead('latest', kind, (err, template) =>\n      !err && template && this.editor.patchValue(template.contents)\n    );\n  }\n\n  private handleTemplate(template: ITemplate, kind: string, cb?: (Error, string) => void) {\n    this.templateService.templates.set(kind, template);\n    if (cb) return cb(void 0, template);\n  }\n\n  /* // Would be better to not update, in case drafts are introduced\n  tplUpdate(new_template: ITemplateBase) {\n    new_template.createdAt = this.templateService.templates.createdAt;\n\n    this.templateService\n      .update(\n        Object.assign({ updatedAt: new Date() }, this.templateService.templates),\n        new_template)\n      .subscribe(this.handleTemplate, this.handleError.bind(this))\n  }*/\n\n  tplDestroy(createdAt: string | Date) {\n    this.templateService\n      .destroy(createdAt)\n      .subscribe(_ => _,\n        this.handleError.bind(this)\n      )\n  }\n\n  private handleError(error: string) {\n    this.alertsService.add({ type: 'warning', msg: error })\n  }\n\n  validTwitterLength(): boolean {\n    return this.form.value.twitter.length < 240\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RichTextModule } from '../richtext/richtext.module';\nimport { TemplateComponent } from './template.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, ReactiveFormsModule,\n    RichTextModule\n  ],\n  declarations: [TemplateComponent],\n  exports: [TemplateComponent]\n})\nexport class TemplateModule {\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <input *ngIf=\\\"config.filtering\\\" placeholder=\\\"Filter all columns\\\"\\n           [ngTableFiltering]=\\\"config.filtering\\\"\\n           class=\\\"form-control\\\"\\n           (tableChanged)=\\\"onChangeTable(config)\\\"/>\\n  </div>\\n</div>\\n<br>\\n<ng-table [config]=\\\"config\\\"\\n          (tableChanged)=\\\"onChangeTable(config)\\\"\\n          (cellClicked)=\\\"onCellClick($event)\\\"\\n          [rows]=\\\"users\\\" [columns]=\\\"columns\\\">\\n</ng-table>\\n<ng-container *ngIf=\\\"config.paging && page !== numPages\\\">\\n  <ngb-pagination\\n    class=\\\"pagination-sm\\\"\\n    [(ngModel)]=\\\"page\\\"\\n    [collectionSize]=\\\"length\\\"\\n    [pageSize]=\\\"itemsPerPage\\\"\\n    [maxSize]=\\\"maxSize\\\"\\n    [boundaryLinks]=\\\"true\\\"\\n    [rotate]=\\\"false\\\"\\n    (pageChanged)=\\\"onChangeTable(config, $event)\\\"\\n    (numPages)=\\\"numPages = $event\\\">\\n  </ngb-pagination>\\n  <pre *ngIf=\\\"config.paging\\\" class=\\\"card card-block card-header\\\">Page: {{page}} / {{numPages}}</pre>\\n</ng-container>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { map } from 'rxjs/operators';\n\nimport { UserService } from '../../api/user/user.service';\nimport { IAuthReq } from '../../api/auth/auth.interfaces';\n\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  public users: IAuthReq[] = [];\n  public columns: Array<any> = [\n    { title: 'email', name: 'email', filtering: { filterString: '', placeholder: 'Filter by email' } },\n    { title: 'updatedAt', className: ['office-header', 'text-success'], name: 'updatedAt', sort: 'asc' },\n    { title: 'createdAt.', name: 'createdAt' }\n  ];\n  public config: any = {\n    paging: true,\n    sorting: { columns: this.columns },\n    filtering: { filterString: '' },\n    className: ['table-striped', 'table-bordered']\n  };\n  public page = 1;\n  public itemsPerPage = 10;\n  public maxSize = 5;\n  public numPages = 1;\n  public length = 0;\n\n  constructor(private userService: UserService) {\n  }\n\n  ngOnInit() {\n    this.userService\n      .getAll()\n      .pipe(map(user => user.users))\n      .subscribe(users => this.users = users,\n        console.error\n      );\n    this.onChangeTable(this.config);\n  }\n\n  public changePage(page: any, data: Array<any> = this.users): Array<any> {\n    const start = (page.page - 1) * page.itemsPerPage;\n    const end = page.itemsPerPage > -1 ? (start + page.itemsPerPage) : data.length;\n    return data.slice(start, end);\n  }\n\n  public changeSort(data: any, config: any): any {\n    if (!config.sorting) {\n      return data;\n    }\n\n    const columns = this.config.sorting.columns || [];\n    let columnName: string = void 0;\n    let sort: string = void 0;\n\n    for (let i = 0; i < columns.length; i++) {\n      if (columns[i].sort !== '' && columns[i].sort !== false) {\n        columnName = columns[i].name;\n        sort = columns[i].sort;\n      }\n    }\n\n    if (!columnName) {\n      return data;\n    }\n\n    // simple sorting\n    return data.sort((previous: any, current: any) => {\n      if (previous[columnName] > current[columnName]) {\n        return sort === 'desc' ? -1 : 1;\n      } else if (previous[columnName] < current[columnName]) {\n        return sort === 'asc' ? -1 : 1;\n      }\n      return 0;\n    });\n  }\n\n  public changeFilter(data: any, config: any): any {\n    let filteredData: Array<any> = data;\n    this.columns.forEach((column: any) => {\n      if (column.filtering) {\n        filteredData = filteredData.filter((item: any) =>\n          item[column.name].match(column.filtering.filterString)\n        );\n      }\n    });\n\n    if (!config.filtering) {\n      return filteredData;\n    }\n\n    if (config.filtering.columnName) {\n      return filteredData.filter((item: any) =>\n        item[config.filtering.columnName].match(this.config.filtering.filterString));\n    }\n\n    const tempArray: Array<any> = [];\n    filteredData.forEach((item: any) => {\n      let flag = false;\n      this.columns.forEach((column: any) => {\n        if (item[column.name].toString().match(this.config.filtering.filterString))\n          flag = true;\n      });\n      if (flag) {\n        tempArray.push(item);\n      }\n    });\n    filteredData = tempArray;\n\n    return filteredData;\n  }\n\n  public onChangeTable(config: any, page: any = { page: this.page, itemsPerPage: this.itemsPerPage }): any {\n    if (config.filtering) {\n      Object.assign(this.config.filtering, config.filtering);\n    }\n\n    if (config.sorting) {\n      Object.assign(this.config.sorting, config.sorting);\n    }\n\n    const filteredData = this.changeFilter(this.users, this.config);\n    const sortedData = this.changeSort(filteredData, this.config);\n    this.users = page && config.paging ? this.changePage(page, sortedData) : sortedData;\n    this.length = sortedData.length;\n  }\n\n  public onCellClick(data: any): any {\n    console.log(data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { Ng2TableModule } from 'ng2-table/ng2-table';\nimport { NgbPaginationModule, NgbTabsetModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { dashboardRoutes } from '../dashboard/dashboard.routes';\nimport { UsersComponent } from './users.component';\nimport { UserService } from '../../api/user/user.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule, RouterModule.forChild(dashboardRoutes), FormsModule,\n    NgbPaginationModule.forRoot(), NgbTabsetModule, Ng2TableModule\n  ],\n  providers: [UserService],\n  declarations: [UsersComponent]\n})\nexport class UsersModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","export const redirUrlOr = (str: string): string =>\n  new URLSearchParams(window.location.search.slice(1)).get('redirectUrl') || str;\n","/* (ignored) */"],"sourceRoot":""}